"I also dream about a modern replacement for LaTeX designed from the ground up
 to target multiple output formats (at least PDF, HTML, EPUB)"

	-- John MacFarlane, author of Pandoc

A markup language to produce PDF, HTML, EPUB documents
--------------------------------------------------------------------------------



Design Goals:

- TeX like syntax, but vastly simpler parsing rules, and escaping.
- HTML, RST, LaTeX like semantics, i.e section, h1, strong, footnote
- No Ascii Art for formatting semantics. All commands follow same form
- Commands can take arguments, including text and lists of items.
- Commands can be used to describe formatting, structure, and metadata.
- Commands may not require exact indentation, trailing whitespace
  or drawing ascii art.
- However, some commands may take an indented block.
	
Non Goals:

- Markdown esque shorthand. Will not be defined in the core language, but can be 
  added by filters.

- Programmable. The Language will be declarative, without macros.
  Can be added by filters.

Syntax
--------------------------------------------------------------------------------

Rule 0: \ is the command/escape character.
	 \\ is a literal \, simarly for \, \{ \} \[ \] \! \: \; \=

Rule 1: One line break is a space.
	Two line breaks are the end of a paragraph.

	Use \ at the end of a line to force a continuation.

Rule 2: Commands begin with a \ have a name, arguments
	and end with whitespace, or a semicolon.

	i.e foo \bar baz
	    foo \bar; baz
	
	Commands can have any number of arguments.
	Command names must not contain whitespace, or control characters
	Names may contain _ and . but not other  puncutation marks
	like  : \ { } [ ] ! : ;

	i.e
		
		\h1{....} \section[1]{....}
		\pagebreak;

Rule 3: Text Arguments
	Text arguments are delimited by {}'s 
	Commands can take multiple text arguments. 
	Commands can also be inside text arguments. 

	e.g \foo{bar}{baz}
	    \section{\h1{blah}}


	You can use any matching number of {}'s, i.e
	the following argument is "a thing". 

	    \lol{{{a thing}}}

	When you use  {{{ ... }}} you do not need to
	escape solitary }'s or }}'s inside.

Rule 4: Raw Text Arguments
	Inside raw text blocks, the \ has no special meaning.
	Use ! to mark text blocks as raw. So \ }, etc appear
	 as if escaped.
	
	e.g \foo{!{foo}!} is "{foo}", \foo{!bar\!!} is "bar\!"

	Commands can take multiple raw text arguments
	Raw Text arguments cannot contain commands.
	Newlines are preserved. Backslashes are preserved.

	Similarly to {}'s, you can also use multiple !'s
	i.e  {! bar !} {!! bar !!}, etc.
	The number of {'s and !'s only have to match
	 each other

Rule 5: List Arguments
	A command can take a list as an argument
	items are comma seperated. 

	e.g \foo[1,2,3] \bar[1]
	
	Lists can contain other lists, and text blocks

	e.g \foo[[1],[2]], \bar[{1,2}]

	List items can have names attached. Names follow 
	the same restriction as command names.
	
	e.g \foo[a=1, b=2]
	
	Trailing commas are allowed, and ignored.

Rule 6: Block arguments
	If a command has : at the end, the next consistently
	indented block of text, is used as a text argument

	e.g:	
		\cmd!
			hello
		blah

	Indentation must be consistent, blank lines are skipped
	when checking indentation levels.

Rule 7: Raw block argument
	If a command has ! at the end, the next consistently
	indented block of text, is used as a raw text argument

	e.g:
		\cmd!
			text block
		text.

	Indentation must be consistent, blank lines are skipped
	when checking indentation levels.

	Newlines, backslashes are preserved. No commands parsed inside.

Rule 8: Unicode

	Commands are NFC normalized.
	BOMs are ignored at beginning.
	Input should be utf-8, without surrogate pair characters.
	Unicode whitespace/para characters should be respected.
	
Semantics
--------------------------------------------------------------------------------

Standard HTML document elements, with a smattering of LaTeX, 
and ReStructuredText

Something like:
	
	\code[python]{}, \h[1], \b, \i{...}, \pagebreak
	\note, \footnote, \sidenote, \ref, \link,
	\author, \title, \version, \list, \table,
	\metadata[author=...,title=....]

Should be able to make books, chapters, citations, bibliographies, title pages,
rfc style things etc.


Bikeshedding:
--------------------------------------------------------------------------------

using :: or !! to make them stand out more.

building static/all in one website, seperate chapters, etc.
Or handling a directory in bulk


